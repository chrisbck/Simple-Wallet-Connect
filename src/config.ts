// Import dot from polkadot API (this will be generated by papi)
import { dot } from "@polkadot-api/descriptors";
import { defineConfig } from "@reactive-dot/core";
import { createLightClientProvider } from "@reactive-dot/core/providers/light-client.js";
import { InjectedWalletProvider } from "@reactive-dot/core/wallets.js";
import { LedgerWallet } from "@reactive-dot/wallet-ledger";
import { WalletConnect } from "@reactive-dot/wallet-walletconnect";
import { registerDotConnect } from "dot-connect";

// Create a light client provider for Polkadot
const lightClientProvider = createLightClientProvider();

// Define the configuration
export const config = defineConfig({
  chains: {
    polkadot: {
      descriptor: dot,
      provider: lightClientProvider.addRelayChain({ id: "polkadot" }),
    },
  },
  wallets: [
    new InjectedWalletProvider(),
    new LedgerWallet(),
    new WalletConnect({
      projectId: "YOUR_WALLET_CONNECT_PROJECT_ID", // Replace with your WalletConnect project ID if needed
      providerOptions: {
        metadata: {
          name: "DOT Wallet Connect Demo",
          description: "A simple demo for connecting to Polkadot wallets",
          url: "http://localhost:5173",
          icons: ["https://polkadot.network/assets/img/logo-polkadot.svg"],
        },
      },
      chainIds: [
        "polkadot:91b171bb158e2d3848fa23a9f1c25182", // Polkadot
      ],
    }),
  ],
});

// Register dot-connect custom elements & configure supported wallets
registerDotConnect({
  wallets: config.wallets,
});
